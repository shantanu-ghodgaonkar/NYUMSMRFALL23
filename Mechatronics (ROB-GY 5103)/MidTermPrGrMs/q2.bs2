' {$STAMP BS2}
' {$PBASIC 2.5}

'INITIALISING THE VAROIOUS VARIABLES
BTNU PIN 6 'SET PIN 6 TO UNITS PLACE - BUTTON 1
BTNWRKU VAR Byte 'WORKPLACE FOR BUTTON 1
BTNT PIN 7 'SET PIN 7 TO TENS PLACE - BUTTON 2
BTNWRKT VAR Byte 'WORKPLACE FOR BUTTON 2
iU VAR Word 'LOOP COUNTER FOR BUTTON 1
iT VAR Word 'LOOP COUNTER FOR BUTTON 2
ANS CON 56 'ANSWER CONSTANT
UP VAR Byte 'VARIABLE FOR UNITS PLACE DIGIT
TP VAR Byte ' VARIABLE FOR TENS PALCE DIGIT
GUESS VAR Byte ' VARIABLE FOR GUESSED NUMBER

UP = 0 ' INITITIALSE UNITS PLACE DIGIT
TP = 0 ' INITIALISE TENS PLACE DIGIT

DO
    LOW 15 'RED LED SIGNIFYING HOT
    LOW 14 'YELLOW LED SIGNIFYING COLD
    LOW 13 'GREEN LED SIGNIFYING WIN
    DEBUG "NEW GUESS", CR, "FIRST COUNTING UNITS PLACE", CR
    ' USING BELOW FOR LOOP WE SHALL COUNT THE PULSES FOR THE UNITS PLACE AND STORE IT IN VARIABLE UP
    FOR iU = 0 TO 3585
      RECU:
        BUTTON BTNU, 1, 255, 20, BTNWRKU, 1, INCU
    NEXT
    DEBUG "NOW COUNTING TENS PLACE", CR
        ' USING BELOW FOR LOOP WE SHALL COUNT THE PULSES FOR THE TENS PLACE AND STORE IT IN VARIABLE TP
    FOR iT = 0 TO 3585
      RECT:
        'DEBUG "EXECUTING FOR LOOP FOR TENS PLACE"
        BUTTON BTNT, 1, 255, 20, BTNWRKT, 1, INCT
    NEXT
    'NOW WE SHALL CALCULATE THE GUESS BY MULTIPLYING THE TENS DIGIT WITH 10 AND ADDING IT TO THE UNITS DIGIT
    GUESS = TP*10 + UP
    'NOW WE SHALL DISPLAY THE GUESS
    DEBUG "YOUR GUESS IS", GUESS, CR

    'COMPARE THE GUESS WITH THE ANSWER AND BASED ON THAT LIGHT UP THE NECESSARY LED
    'IF GUESS IS GREATER THAN THE ANSWER, LIGHT THE RED LED FOR 5S
    IF GUESS > ANS THEN
      HIGH 15
      PAUSE 5000
      LOW 15
    'IF GUESS IS LESSER THAN THE ANSWER, LIGHT THE YELLOW LED FOR 5S
    ELSEIF GUESS < ANS THEN
      HIGH 14
      PAUSE 5000
      LOW 14
    'IF GUESS IS EQUAL TO THE ANSWER, LIGHT THE GREEN LED FOR 5S
    ELSEIF GUESS = ANS THEN
      HIGH 13
      HIGH 14
      HIGH 15
      PAUSE 5000
      LOW 13
      LOW 14
      LOW 15
    ENDIF

'LOOPING STATEMENT FOR THE CODE TO KEEP RUNNING UNITL THE WIN IS REACHED
LOOP WHILE (GUESS <> ANS)

'SUBROUTINE FOR COUNTING UNITS PLACE PULSES
INCU:
  DEBUG "UNITS PLACE PULSE RECORDED", CR
  UP = UP + 1
  GOTO RECU

'SUBROUTINE FOR COUNTING TENS PLACE
INCT:
  DEBUG "TENS PLACE PULSE RECORDED", CR
  TP = TP + 1
  GOTO RECT